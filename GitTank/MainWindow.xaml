<Window x:Class="GitTank.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:valueConverters="clr-namespace:GitTank.ValueConverters"
        xmlns:viewModels="clr-namespace:GitTank.ViewModels"
        xmlns:views="clr-namespace:GitTank.Views"
        mc:Ignorable="d"
        Title="GitTank" WindowStartupLocation="CenterScreen"
        Height="450" Width="800"
        MinHeight="450" MinWidth="450"
        x:Name="MainScreen">
    <Window.Resources>
        <valueConverters:BoolToVisibilityConverter x:Key="BoolToVisibility" />
    </Window.Resources>
    <Grid>
    <Grid Visibility="{Binding Path=IsNewUI, Mode=OneTime, Converter={StaticResource BoolToVisibility}, ConverterParameter=INVERSE}">
        <Grid.RowDefinitions>
            <RowDefinition Height="Auto"/>
            <RowDefinition Height="*"/>
        </Grid.RowDefinitions>
        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="*"/>
            <ColumnDefinition Width="150"/>
        </Grid.ColumnDefinitions>
        <Grid Grid.Column="0" Grid.Row="0">
            <Grid.RowDefinitions>
                <RowDefinition/>
                <RowDefinition/>
            </Grid.RowDefinitions>
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="Auto"/>
                <ColumnDefinition Width="*"/>
            </Grid.ColumnDefinitions>
            <Label Grid.Column="0" Grid.Row="0" Content="Repository:" VerticalAlignment="Bottom" Margin="5,0,0,0"/>
            <Label Grid.Column="0" Grid.Row="1"  Content="Branch:" VerticalAlignment="Center" Margin="5,0,0,0"/>
            <ComboBox ItemsSource="{Binding Repositories}"
                      SelectedIndex="{Binding SelectedRepoIndex}"
                      Grid.Row="0" Grid.Column="1"
                      Margin="0,10,10,0"
                      IsTextSearchEnabled="True"
                      IsEditable="false"/>
            <ComboBox ItemsSource="{Binding Branches}"
                      SelectedIndex="{Binding SelectedBranchIndex}"
                      Grid.Row="1"
                      Grid.Column="1"
                      Margin="0,10, 10,10"
                      IsTextSearchEnabled="True"
                      IsEditable="false"/>
        </Grid>
        <TextBox Grid.Column="0"
                 Grid.Row="1"
                 x:Name="TextBoxOutput"
                 Text="{Binding OutputInfo}"
                 TextChanged="OnTextBoxOutputTextChanged"
                 IsReadOnly="True"
                 Margin="10,0,10,10"
                 TextWrapping="Wrap"
                 VerticalScrollBarVisibility="Auto"
                 HorizontalScrollBarVisibility="Auto"/>
        <StackPanel Grid.Row="0" Grid.Column="1" Grid.RowSpan="2" Margin="0, 13, 10, 10">
            <TextBlock TextAlignment="Center" Text="Commands" FontSize="16" Margin="0, 0, 0, 10"></TextBlock>
            <Button
                Content="Fetch"
                Margin="0, 0, 0, 5"
                IsEnabled="{Binding IsFetchButtonEnable}"
                Command="{Binding FetchCommand}"/>
            <Button
                Content="Pull"
                Margin="0, 5"
                IsEnabled="{Binding IsUpdateButtonEnable}"
                Command="{Binding UpdateCommand}"/>
            <Button
                Content="Push"
                Margin="0, 5"
                IsEnabled="{Binding IsPushButtonEnable}"
                Command="{Binding PushCommand}"/>
            <Button x:Name="OpenPopup"
                Content="Create branch"
                Margin="0, 5">
                    <Button.Triggers>
                        <EventTrigger RoutedEvent="Button.Click">
                            <EventTrigger.Actions>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <BooleanAnimationUsingKeyFrames
                                            Storyboard.TargetName="ContextPopup"
                                            Storyboard.TargetProperty="IsOpen">
                                            <DiscreteBooleanKeyFrame KeyTime="0:0:0" Value="True" />
                                        </BooleanAnimationUsingKeyFrames>
                                    </Storyboard>
                                </BeginStoryboard>
                            </EventTrigger.Actions>
                        </EventTrigger>
                    </Button.Triggers>
             </Button>
            <Popup x:Name="ContextPopup"  PlacementTarget="{Binding ElementName=MainScreen}" Placement="Center" Width="250" Height="150" StaysOpen="False">
                <Border BorderBrush="DarkSlateGray" BorderThickness="2" Background="#E6E9EF">
                    <StackPanel>
                        <Label Background="#D5D8DC" Width="250" Content="Create new branch"></Label>
                        <TextBlock Text="Branch name:" FontSize="14" TextAlignment="Left" Margin="15, 10"></TextBlock>
                        <TextBox x:Name="Branch" Text="{Binding NewBranchName, Mode=TwoWay}" VerticalAlignment="Center" Margin="15,0,15,0"/>
                            <Button
                            Content="Create"
                            Height="30" Width="100"
                            HorizontalAlignment="Center"
                            Margin="0, 10"
                            Command="{Binding CreateBranchCommand}"/>
                        </StackPanel>
                </Border>
            </Popup>
            <Button
                Content="Delete branch"
                Margin="0, 5"
                IsEnabled="False"/>
            <Button
                Content="Branch"
                Margin="0, 5"
                IsEnabled="{Binding IsBranchButtonEnable}"
                Command="{Binding BranchCommand}"/>
            <Button
                Content="Settings"
                Margin="0,5"
                IsEnabled="{Binding IsSettingsButtonEnable}"
                Command="{Binding SettingsCommand}"/>
            <Button
                Content="Terminal"
                Margin="0,5"
                IsEnabled="{Binding IsSettingsButtonEnable}"
                Command="{Binding OpenTerminalCommand}"/>
            <Expander Header="Advanced commands" HorizontalAlignment="Center" VerticalAlignment="Center" Margin="0, 10">
                <StackPanel>
                    <Button
                        Content="Checkout"
                        Margin="0,5"
                        IsEnabled="{Binding IsCheckoutButtonEnable}"
                        Command="{Binding CheckoutCommand}"/>
                    <Button
                        Content="Sync"
                        Margin="0,5"
                        IsEnabled="{Binding IsSyncButtonEnable}"
                        Command="{Binding SyncCommand}"/>
                </StackPanel>
            </Expander>
        </StackPanel>
    </Grid>
    <Grid Visibility="{Binding Path=IsNewUI, Mode=OneTime, Converter={StaticResource BoolToVisibility}}">
        <Grid.RowDefinitions>
            <RowDefinition Height="50"/>
            <RowDefinition Height="*"/>
            <RowDefinition Height="50"/>
        </Grid.RowDefinitions>
        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="50"/>
            <ColumnDefinition Width="*"/>
            <ColumnDefinition Width="Auto"/>
        </Grid.ColumnDefinitions>
        <ItemsControl Grid.Column="1" Grid.Row="1" ItemsSource="{Binding Repositories}">
            <ItemsControl.ItemsPanel>
                <ItemsPanelTemplate>
                    <WrapPanel/>
                </ItemsPanelTemplate>
            </ItemsControl.ItemsPanel>
            <ItemsControl.ItemTemplate>
                <DataTemplate>
                    <views:RepositoryTile/>
                </DataTemplate>
            </ItemsControl.ItemTemplate>
        </ItemsControl>
        <StackPanel Grid.Row="1" Grid.Column="2" Margin="0, 10, 10, 10" Width="170">
            <StackPanel.Resources>
                <Style TargetType="Button">
                    <Setter Property="Margin" Value="10, 5"></Setter>
                    <Setter Property="Height" Value="40"></Setter>
                    <Setter Property="Background" Value="White"></Setter>
                    <Setter Property="FontSize" Value="17"></Setter>
                    <Setter Property="Template">
                        <Setter.Value>
                            <ControlTemplate TargetType="Button">
                                <Border Background="{TemplateBinding Background}" BorderBrush="DarkGray" BorderThickness="2" CornerRadius="7">
                                    <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
                                </Border>
                            </ControlTemplate>
                        </Setter.Value>
                    </Setter>
                    <Style.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Background" Value="LightSkyBlue"/>
                            <Setter Property="TextBlock.Foreground" Value="White"></Setter>
                        </Trigger>
                        <Trigger Property="IsPressed" Value="True">
                            <Setter Property="Background" Value="CornflowerBlue"/>
                            <Setter Property="TextBlock.Foreground" Value="White"></Setter>
                        </Trigger>
                    </Style.Triggers>
                </Style>
            </StackPanel.Resources>
            <TextBlock TextAlignment="Center" Text="Commands" FontSize="20" FontFamily="Vernada" Margin="0, 0, 0, 10"></TextBlock>
            <Button Content="Fetch"/>
            <Button Content="Pull"/>
            <Button Content="Push"/>
            <Button Content="Create branch"/>
            <Button Content="Delete branch"/>
            <Button Content="Branch"/>
        </StackPanel>
    </Grid>
    </Grid>
</Window>
